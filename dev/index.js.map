{"version":3,"file":"index.js","sources":["../src/utils/stringTemplate.ts","../src/utils/fileHelper.ts","../src/handleNav.ts","../src/index.ts"],"sourcesContent":["import { FileConfig, FolderConfig } from \"../types\";\n\n\nconst commonTop = (config: { title: string }) => `---\nsidebar: false\ntitle: `+ config.title + `\n---\n## 该章节包含以下内容`\n\n/**\n * @description: \n * @param {string} files 文件列表\n * @param {string} title 生成页面标题\n * @return {*}\n */\nconst READMETemplate = (config: { files: FileConfig, folders: FolderConfig }, title: string) => {\n  //  如果为空数组\n  if (config['files'].length === 0 && config['folders'].length === 0) return '';\n\n  return commonTop({ title }) + `\n  \n  ` + config['files'].map(item => `\n#### [${item.replace('.md', '')}](${item})\n\n  `).join('') + commonTop({ title }) + config['folders'].map((item: any) => {\n    // 获取该每个子目录的md文件\n    let childrenTemplate = item.children.map((child: string) => `\n- [${child.replace('.md', '')}](${item.link + '/' + child})\n\n  `).join('');\n    return `\n#### [${item.title}](${item.link})\n    ` + childrenTemplate\n  }).join('');\n}\n\nexport default {\n  READMETemplate\n}","import path from 'path';\nimport { readdirSync, statSync, writeFileSync } from 'fs'\nimport Template from '@/utils/stringTemplate'\n\n/**\n *\n * @param {String} dir 目录路径\n * @param {Array} SuffixIncludes 需要处理的文件后缀\n * @returns\n */\nconst getAllFiles = (dir: string, SuffixIncludes: string[] = []) => {\n  // readdirSync 仅返回当前这层的数据\n  const filenameList = readdirSync(dir).filter((filename: string) => {\n    // statSync() 用来获取文件信息 stat => status\n    const fileInfo = statSync(path.join(dir, filename));\n    //获取后缀\n    const suffix = filename.slice(filename.lastIndexOf(\".\") + 1);\n    return fileInfo.isFile() && SuffixIncludes.includes(suffix) && isNotReadme(filename)\n  });\n  //  排序\n  filenameList.sort();\n  return filenameList;\n};\n\n/**\n * @description: 判断是否是README文件\n * @param {string} filename\n * @return {*}\n */\nconst isNotReadme = (filename: string) => filename.toLocaleLowerCase() !== \"readme.md\"\n\n/**\n *\n * @param {String} dir 当前的目录路径\n * @param {Array} unDirIncludes 需要排除的某些目录(文件夹)\n * @returns {Array} allDirs 所有的目录\n */\nconst getAllDirs = (dir = \".\", unDirIncludes: string[] = []) => {\n  // 获取目录数据\n  const items = readdirSync(dir);\n  let allDirs: string[] = [];\n  // 递归遍历目录中所有文件夹\n  items.forEach((item: string) => {\n    const dirName = path.join(dir, item);\n    if (statSync(dirName).isDirectory() && !unDirIncludes.includes(item)) {\n      allDirs.push(dirName);\n      allDirs = allDirs.concat(getAllDirs(dirName, unDirIncludes));\n    }\n  });\n  return allDirs;\n};\n\n/**\n *\n * @param {String} dir 当前的目录路径\n * @param {Array} unDirIncludes 需要排除的某些目录(文件夹)\n * @returns {Array} allCurDirs 当前这层所有的目录\n */\nconst getAllCurDirs = (dir = \".\", unDirIncludes: string[] = []): string[] => {\n  // 获取目录数据\n  const items = readdirSync(dir);\n  const allCurDirs: string[] = [];\n  // 递归遍历目录中所有文件夹\n  items.forEach((item: string) => {\n    const dirName = path.join(dir, item);\n    if (statSync(dirName).isDirectory() && !unDirIncludes.includes(item)) {\n      allCurDirs.push(dirName);\n    }\n  });\n  return allCurDirs;\n};\n\n/**\n * @description: 生成目录README.md\n * @param {string} dir 文件目录\n * @return {*}\n */\nconst createREADME = (dir: string, unDirIncludes: string[] = []) => {\n  // 获取md文件列表\n  const configs = {\n    files: getAllFiles(dir, ['md']), \n    folders: getAllCurDirs(dir, unDirIncludes).map(item => {\n      return {\n        title: item.substring(item.lastIndexOf('/') + 1),\n        link: item.replace(dir, '.'),\n        children: getAllFiles(item, ['md']) || []\n      }\n    })\n  }\n    // 生成文件内容\n    const content = Template.READMETemplate(configs, dir.substring(dir.lastIndexOf('/') + 1));\n    // 文件路径\n    const file = path.join(dir, './README.md')\n  // 写入文件\n  writeFileSync(file, content)\n  }\n\n  export default {\n    getAllFiles, getAllDirs, getAllCurDirs, createREADME\n  }\n","import FileHelper from '@/utils/fileHelper'\n\n/**\n * @description: 获取导航配置项\n * @param {string} path 目录路径\n * @param {string} unDirIncludes 排除文件\n * @param {string} prefix 父级前缀\n * @return {*} 返回nav配置\n */\nconst getNav = (path: string, unDirIncludes: string[] = [], showSubNavCtx: string[] = []) => {\n  const allCurDirs = FileHelper.getAllCurDirs(path, unDirIncludes);\n  return allCurDirs.map((dir: string) => {\n    const text = dir.substring(dir.lastIndexOf('/') + 1);\n    const link = dir.substring(dir.lastIndexOf('/')) + '/';\n    return hasSubDirs(dir, unDirIncludes) ? {\n      text,\n      link,\n      children: getSubNav(dir, unDirIncludes, link, showSubNavCtx)\n    } : {\n      text,\n      children: getMdFiles(dir, link)\n    }\n  });\n}\n\n/**\n * @description: 获取二级目录配置\n * @param {string} path 目录路径\n * @param {string} unDirIncludes 排除文件\n * @param {string} prefix 父级前缀\n * @return {*} 返回二级nav配置\n */\nconst getSubNav = (path: string, unDirIncludes: string[] = [], prefix = '/', showSubNavCtx: string[] = []) => {\n  // 获取全部子目录路径\n  const allCurDirs = FileHelper.getAllCurDirs(path, unDirIncludes);\n  return [...getMdFiles(path, prefix), ...allCurDirs.map((dir: string) => {\n    // 处理配置\n    const text = dir.substring(dir.lastIndexOf('/') + 1)\n    const link = prefix + text + '/'\n    // 创建README.md\n    FileHelper.createREADME(dir);\n    // 如果存在符合条件的子目录\n    if (hasSubDirs(dir, unDirIncludes)) {\n      // 获取子目录的nav配置\n      const subFolder = FileHelper.getAllCurDirs(dir, unDirIncludes).map((subFolderDir: string) => {\n        const subFolderText = subFolderDir.substring(subFolderDir.lastIndexOf('/') + 1)\n        const subFolderLink = link + subFolderText + '/'\n        // 给子目录也创建README.md\n        FileHelper.createREADME(subFolderDir);\n        return {\n          text: subFolderText,\n          link: subFolderLink\n        }\n      })\n      return {\n        text,\n        link,\n        children: showSubNavCtx.includes(text) ? subFolder : []\n      }\n    }\n    // 不存在子目录\n    return {\n      text,\n      link,\n      children: showSubNavCtx.includes(text) ? getMdFiles(dir, link) : []\n    }\n  })];\n}\n\n/**\n * @description: 判断是否存在子目录\n * @param {string} path 目录路径\n * @param {string} unDirIncludes 排除文件\n * @return {*} 返回布尔值\n */\nconst hasSubDirs = (path: string, unDirIncludes: string[] = []) => {\n  return FileHelper.getAllCurDirs(path, unDirIncludes).length !== 0\n}\n\n/**\n * @description: 获取子目录文件\n * @param {string} path 目录路径\n * @param {string} prefix 文件前缀\n * @return {array} 返回带前缀的文件名列表\n */\nconst getMdFiles = (path: string, prefix = '') => {\n  const files = FileHelper.getAllFiles(path, ['md'])\n  //自动在该目录下生成README文件\n  FileHelper.createREADME(path);\n  return files.map((item:string) => prefix + item);\n}\n\n\nexport { getNav }","import { getNav } from '@/handleNav'\nimport { resolve } from 'path'\ninterface Options {\n  subNav: {\n    show: string[]\n  },\n  ignore: {\n    folders: string[]\n    files: string[]\n  }\n}\n\nfunction AutoNavPlugin(options: Options = {\n  subNav: {\n    show: []\n  },\n  ignore: {\n    folders: [],\n    files: []\n  }\n}) {\n  const path = resolve(process.cwd(), 'docs');\n  return getNav(path, options.ignore.folders,options.subNav.show)\n}\n\nmodule.exports = AutoNavPlugin"],"names":["readdirSync","statSync","path","writeFileSync","resolve"],"mappings":"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"}